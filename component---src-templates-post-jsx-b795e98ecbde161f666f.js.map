{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/layout/index.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SEO/SEO.jsx"],"names":["components_UserInfo_UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","Follow","username","options","count","t","react","Component","m","d","n","f","h","g","E","y","v","components_Disqus_Disqus","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","postNode","SiteConfig_default","disqusShortname","post","frontmatter","url","url_join_default","siteUrl","pathPrefix","fields","slug","main_default","shortname","identifier","title","category_id","onNewComment","A","x","C","components_PostTags_PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","T","components_SocialLinks_SocialLinks","_this$props","postPath","mobile","iconSize","renderShareCount","es","k","j","round","size","l","p","o","e","b","quote","excerpt","c","description","i","N","S","post_PostTemplate","pageContext","data","markdownRemark","id","postDefaultCategoryID","layout","location","Helmet_default","siteTitle","SEO","postSEO","dangerouslySetInnerHTML","__html","html","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","249","__webpack_require__","default","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","currentPath","pathname","replace","indexOf","children","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","react__WEBPACK_IMPORTED_MODULE_0___default","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","isRequired","__webpack_exports__","261","r","s","createContext","object","func","image","postURL","postMeta","cover","url_join__WEBPACK_IMPORTED_MODULE_3___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","react__WEBPACK_IMPORTED_MODULE_1__","367","369","371"],"mappings":"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","file":"component---src-templates-post-jsx-b795e98ecbde161f666f.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <button>{tag}</button>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout location={this.props.location}>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <h1>{post.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <div className=\"post-meta\">\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </div>\n            <UserInfo config={config} />\n            <Disqus postNode={postNode} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const currentPath = this.props.location.pathname\n      .replace(pathPrefix, \"\")\n      .replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.indexOf(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.indexOf(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.indexOf(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}