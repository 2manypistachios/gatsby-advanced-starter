{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/layout/index.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","249","e","t","m","__webpack_require__","default","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","currentPath","pathname","replace","indexOf","children","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","react__WEBPACK_IMPORTED_MODULE_0___default","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","isRequired","__webpack_exports__","l","261","r","n","i","o","s","c","d","createContext","object","func","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","key"],"mappings":"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","file":"component---src-templates-category-jsx-06fb14d35644ae11ea1d.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright Â© 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const currentPath = this.props.location.pathname\n      .replace(pathPrefix, \"\")\n      .replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.indexOf(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.indexOf(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.indexOf(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}